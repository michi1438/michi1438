!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!C++	name	/aliased names/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!C	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C	m,member	/struct, and union members/
!_TAG_KIND_DESCRIPTION!C	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!C++	c,class	/classes/
!_TAG_KIND_DESCRIPTION!C++	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C++	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C++	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C++	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C++	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C++	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!C++	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!C++	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C++	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C++	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C++	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!Make	I,makefile	/makefiles/
!_TAG_KIND_DESCRIPTION!Make	m,macro	/macros/
!_TAG_KIND_DESCRIPTION!Make	t,target	/targets/
!_TAG_KIND_DESCRIPTION!Markdown	S,subsection	/level 2 sections/
!_TAG_KIND_DESCRIPTION!Markdown	T,l4subsection	/level 4 sections/
!_TAG_KIND_DESCRIPTION!Markdown	c,chapter	/chapters/
!_TAG_KIND_DESCRIPTION!Markdown	n,footnote	/footnotes/
!_TAG_KIND_DESCRIPTION!Markdown	s,section	/sections/
!_TAG_KIND_DESCRIPTION!Markdown	t,subsubsection	/level 3 sections/
!_TAG_KIND_DESCRIPTION!Markdown	u,l5subsection	/level 5 sections/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!C	0.0	/current.age/
!_TAG_PARSER_VERSION!C++	0.0	/current.age/
!_TAG_PARSER_VERSION!Make	0.0	/current.age/
!_TAG_PARSER_VERSION!Markdown	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/michaeltower/michi1438/PERSONAL/projectC/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.0.0	/95f44c56/
!_TAG_ROLE_DESCRIPTION!C!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!C++!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C++!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C++!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!Make!makefile	included	/included/
!_TAG_ROLE_DESCRIPTION!Make!makefile	optional	/optionally included/
$(NAME)	Shapes/Makefile	/^$(NAME): libf_printf_gnl $(OBJ)$/;"	t
$(NAME)	Shapes/ft_libft_printf_gnl/Makefile	/^$(NAME): gnl libf $(OBJ)$/;"	t
$(NAME)	Shapes/ft_libft_printf_gnl/get_next_line/Makefile	/^$(NAME): $(OBJB)$/;"	t
$(NAME)	Shapes/ft_libft_printf_gnl/libft/Makefile	/^$(NAME): $(OBJS)	$/;"	t
BUFFER_SIZE	Shapes/ft_libft_printf_gnl/get_next_line/get_next_line.h	/^#  define BUFFER_SIZE /;"	d
BUFFER_SIZE	Shapes/ft_libft_printf_gnl/get_next_line/get_next_line_bonus.h	/^#  define BUFFER_SIZE /;"	d
BUZZ	fizzbuzz.c	/^#define BUZZ	/;"	d	file:
CC	Shapes/Makefile	/^CC = gcc$/;"	m
CC	Shapes/ft_libft_printf_gnl/Makefile	/^CC = gcc$/;"	m
CC	Shapes/ft_libft_printf_gnl/get_next_line/Makefile	/^CC = gcc$/;"	m
CC	Shapes/ft_libft_printf_gnl/libft/Makefile	/^CC = gcc$/;"	m
CFLAGS	Shapes/Makefile	/^CFLAGS = -Werror -Wall -Wextra$/;"	m
CFLAGS	Shapes/ft_libft_printf_gnl/Makefile	/^CFLAGS = -Werror -Wextra -Wall $/;"	m
CFLAGS	Shapes/ft_libft_printf_gnl/get_next_line/Makefile	/^CFLAGS = -Werror -Wall -Wextra #-g -fsanitize=address$/;"	m
CFLAGS	Shapes/ft_libft_printf_gnl/libft/Makefile	/^CFLAGS = -Werror -Wall -Wextra$/;"	m
FIZZ	fizzbuzz.c	/^#define FIZZ	/;"	d	file:
FT_LIBFT_PRINTF_GNL_H	Shapes/ft_libft_printf_gnl/ft_libft_printf_gnl.h	/^# define FT_LIBFT_PRINTF_GNL_H$/;"	d
GET_NEXT_LINE_BONUS_H	Shapes/ft_libft_printf_gnl/get_next_line/get_next_line_bonus.h	/^# define GET_NEXT_LINE_BONUS_H$/;"	d
GET_NEXT_LINE_H	Shapes/ft_libft_printf_gnl/get_next_line/get_next_line.h	/^# define GET_NEXT_LINE_H$/;"	d
IN	wcount2.c	/^#define IN	/;"	d	file:
LIBFT_H	Shapes/ft_libft_printf_gnl/libft/libft.h	/^# define LIBFT_H$/;"	d
LIMI	fizzbuzz.c	/^#define LIMI	/;"	d	file:
MAX	entab3.c	/^#define MAX /;"	d	file:
MAX	rudesyntaxcheck.c	/^#define MAX /;"	d	file:
MAX	rudesyntaxcheck2.c	/^#define MAX /;"	d	file:
MAX2	entab3.c	/^#define MAX2 /;"	d	file:
MAXLINE	longest_inverse.c	/^# define MAXLINE /;"	d	file:
MAXLINE	longextern.c	/^#define MAXLINE /;"	d	file:
NAME	Shapes/Makefile	/^NAME = shape $/;"	m
NAME	Shapes/ft_libft_printf_gnl/Makefile	/^NAME = libftprintf.a$/;"	m
NAME	Shapes/ft_libft_printf_gnl/get_next_line/Makefile	/^NAME = get_next_line$/;"	m
NAME	Shapes/ft_libft_printf_gnl/libft/Makefile	/^NAME = libft.a $/;"	m
NONBLANK	replaceinto1ws.c	/^# define NONBLANK /;"	d	file:
OBJ	Shapes/Makefile	/^OBJ = $(SRC:.c=.o)$/;"	m
OBJ	Shapes/ft_libft_printf_gnl/Makefile	/^OBJ = $(SRC:.c=.o) $/;"	m
OBJB	Shapes/ft_libft_printf_gnl/get_next_line/Makefile	/^OBJB = $(SRCB:.c=.o)$/;"	m
OBJS	Shapes/ft_libft_printf_gnl/libft/Makefile	/^OBJS = $(SRC:.c=.o)$/;"	m
OBJSB	Shapes/ft_libft_printf_gnl/libft/Makefile	/^OBJSB = $(SRCB:.c=.o)$/;"	m
OS	Shapes/Makefile	/^OS := ${shell uname}$/;"	m
OUT	wcount2.c	/^#define OUT /;"	d	file:
PROD	setofages.c	/^#define PROD /;"	d	file:
SHAPES_H	Shapes/shapes.h	/^# define SHAPES_H$/;"	d
SRC	Shapes/Makefile	/^SRC = shape_utils.c $/;"	m
SRC	Shapes/ft_libft_printf_gnl/Makefile	/^SRC = optionctrl_supl.c printfer.c printparser.c print_toconv.c optionctrl.c \\$/;"	m
SRC	Shapes/ft_libft_printf_gnl/libft/Makefile	/^SRC = ft_bzero.c ft_isalpha.c ft_isdigit.c ft_isalnum.c ft_isascii.c ft_isprint.c \\$/;"	m
SRCB	Shapes/ft_libft_printf_gnl/get_next_line/Makefile	/^SRCB = get_next_line_utils_bonus.c get_next_line_bonus.c$/;"	m
SRCB	Shapes/ft_libft_printf_gnl/libft/Makefile	/^SRCB = ft_lstnew.c ft_lstadd_front.c ft_lstsize.c ft_lstlast.c ft_lstadd_back.c \\$/;"	m
TAB	detab.c	/^#define TAB /;"	d	file:
TAB	entab3.c	/^#define TAB /;"	d	file:
TSRC	Shapes/ft_libft_printf_gnl/Makefile	/^TSRC = printftester.c$/;"	m
addr	Shapes/shapes.h	/^	char *addr;$/;"	m	struct:s_data	typeref:typename:char *
all	Shapes/Makefile	/^all: $(NAME)$/;"	t
all	Shapes/ft_libft_printf_gnl/Makefile	/^all: $(NAME)$/;"	t
all	Shapes/ft_libft_printf_gnl/get_next_line/Makefile	/^all: $(NAME) $/;"	t
all	Shapes/ft_libft_printf_gnl/libft/Makefile	/^all: $(NAME) bonus$/;"	t
apply_width	Shapes/ft_libft_printf_gnl/optionctrl.c	/^void	apply_width(int size, int width, t_toggler *flg)$/;"	f	typeref:typename:void
appwidspe	Shapes/ft_libft_printf_gnl/optionctrl.c	/^void	appwidspe(int size, int width, t_toggler *flg, t_conv *cvut)$/;"	f	typeref:typename:void
argintprt	Shapes/ft_libft_printf_gnl/print_toconv.c	/^void	argintprt(t_toggler *flg, t_conv *cvut, int toconv)$/;"	f	typeref:typename:void
bits_per_pixels	Shapes/shapes.h	/^	int	bits_per_pixels;$/;"	m	struct:s_data	typeref:typename:int
bonus	Shapes/ft_libft_printf_gnl/Makefile	/^bonus:$/;"	t
bonus	Shapes/ft_libft_printf_gnl/libft/Makefile	/^bonus: $(OBJS) $(OBJSB)$/;"	t
brace	syntaxchecker.c	/^int brace, brack, paren;$/;"	v	typeref:typename:int
brack	syntaxchecker.c	/^int brace, brack, paren;$/;"	v	typeref:typename:int
btrim	Shapes/ft_libft_printf_gnl/libft/ft_strtrim.c	/^int	btrim(char const *s1, char const *set)$/;"	f	typeref:typename:int
buf	Shapes/ft_libft_printf_gnl/get_next_line/get_next_line.h	/^	char	*buf;$/;"	m	struct:sctgnl	typeref:typename:char *
buf	Shapes/ft_libft_printf_gnl/get_next_line/get_next_line_bonus.h	/^	char	*buf;$/;"	m	struct:sct1	typeref:typename:char *
calc	Shapes/ft_libft_printf_gnl/libft/ft_atoi.c	/^int	calc(int i, const char *nptr)$/;"	f	typeref:typename:int
circlise	Shapes/circle.c	/^int	circlise(int x, int h)$/;"	f	typeref:typename:int
circlise_two	Shapes/circle.c	/^int	circlise_two(int x, int h)$/;"	f	typeref:typename:int
clean	Shapes/Makefile	/^clean:$/;"	t
clean	Shapes/ft_libft_printf_gnl/Makefile	/^clean:$/;"	t
clean	Shapes/ft_libft_printf_gnl/get_next_line/Makefile	/^clean:$/;"	t
clean	Shapes/ft_libft_printf_gnl/libft/Makefile	/^clean:$/;"	t
cleaner	Shapes/ft_libft_printf_gnl/printfer.c	/^void	cleaner(t_conv *cvut)$/;"	f	typeref:typename:void
clear_fing	Shapes/ft_libft_printf_gnl/libft/ft_split.c	/^int	clear_fing(char **ptrptr, int j)$/;"	f	typeref:typename:int
cmd_pipes_ratio	microshell.c	/^int	cmd_pipes_ratio(int *n_pipes, int *n_cmd)$/;"	f	typeref:typename:int
content	Shapes/ft_libft_printf_gnl/libft/libft.h	/^	void			*content;$/;"	m	struct:s_list	typeref:typename:void *
controller	rudesyntaxcheck2.c	/^int controller(int i, char sm[], char out[], int c)$/;"	f	typeref:typename:int
conv_flags	Shapes/ft_libft_printf_gnl/ft_libft_printf_gnl.h	/^	char	*conv_flags;$/;"	m	struct:sct	typeref:typename:char *
copy	Shapes/ft_libft_printf_gnl/libft/ft_strtrim.c	/^char	*copy(char *ptr, char const *s1, int bt, int ft)$/;"	f	typeref:typename:char *
copy	entab3.c	/^void copy(char to[], char from[])$/;"	f	typeref:typename:void
copy	longest_inverse.c	/^void copy(char to[], char from[], int len)$/;"	f	typeref:typename:void
copy	longextern.c	/^void copy(void)$/;"	f	typeref:typename:void
copy	rudesyntaxcheck.c	/^void copy(char from[], char to[])$/;"	f	typeref:typename:void
copy	rudesyntaxcheck2.c	/^void copy(char out[], char sm[])$/;"	f	typeref:typename:void
count	entab3.c	/^int count(int i, int c, char sm[])$/;"	f	typeref:typename:int
count_set_occurence	ft_strtrim.c	/^int	count_set_occurence(char const *s1, char const *set)$/;"	f	typeref:typename:int
counter	Shapes/ft_libft_printf_gnl/libft/ft_split.c	/^int	counter(char const *s, char c)$/;"	f	typeref:typename:int
create_cvut	Shapes/ft_libft_printf_gnl/printfer_supl.c	/^void	*create_cvut(const char *str, int i, t_conv *cvut)$/;"	f	typeref:typename:void *
cvut_lenpoint	Shapes/ft_libft_printf_gnl/print_toconv.c	/^void	cvut_lenpoint(t_toggler *flg, t_conv *cvut, int toconv)$/;"	f	typeref:typename:void
cvutlenstr	Shapes/ft_libft_printf_gnl/print_toconv_suplll.c	/^void	cvutlenstr(t_conv *cvut, const char *toconv)$/;"	f	typeref:typename:void
dealwithplneg	Shapes/ft_libft_printf_gnl/print_toconv_supllll.c	/^void	dealwithplneg(t_toggler *flg, t_conv *cvut, int toconv)$/;"	f	typeref:typename:void
dealwithplus	Shapes/ft_libft_printf_gnl/print_toconv_supllll.c	/^void	dealwithplus(t_toggler *flg, t_conv *cvut, int toconv)$/;"	f	typeref:typename:void
dealwithpoints	Shapes/ft_libft_printf_gnl/print_toconv_suplll.c	/^void	dealwithpoints(t_toggler *flg, int toconv, t_conv *cvut)$/;"	f	typeref:typename:void
dealwithpospoints	Shapes/ft_libft_printf_gnl/print_toconv_suplll.c	/^void	dealwithpospoints(t_toggler *flg, t_conv *cvut, int toconv)$/;"	f	typeref:typename:void
endian	Shapes/shapes.h	/^	int	endian;$/;"	m	struct:s_data	typeref:typename:int
exec_wrap	microshell.c	/^int	exec_wrap(char ***cmds, char **env, int *n_cmd, int *n_pipes)$/;"	f	typeref:typename:int
fahrcels	fahragain.c	/^int fahrcels(int lower, int upper, int step)$/;"	f	typeref:typename:int
fclean	Shapes/Makefile	/^fclean: clean$/;"	t
fclean	Shapes/ft_libft_printf_gnl/Makefile	/^fclean: clean$/;"	t
fclean	Shapes/ft_libft_printf_gnl/get_next_line/Makefile	/^fclean: clean$/;"	t
fclean	Shapes/ft_libft_printf_gnl/libft/Makefile	/^fclean: clean$/;"	t
flag_parser	Shapes/ft_libft_printf_gnl/printparser.c	/^char	*flag_parser(const char *str, int i)$/;"	f	typeref:typename:char *
flglying	Shapes/ft_libft_printf_gnl/optionctrl.c	/^void	*flglying(char *flag, t_toggler *flg)$/;"	f	typeref:typename:void *
freeandreplace	Shapes/ft_libft_printf_gnl/get_next_line/get_next_line_utils.c	/^char	*freeandreplace(char *oldstr, char *stradd, int ind)$/;"	f	typeref:typename:char *
freeandreplace	Shapes/ft_libft_printf_gnl/get_next_line/get_next_line_utils_bonus.c	/^char	*freeandreplace(char *oldstr, char *stradd, int ind)$/;"	f	typeref:typename:char *
freedom	Shapes/ft_libft_printf_gnl/get_next_line/get_next_line_utils.c	/^char	*freedom(char *str)$/;"	f	typeref:typename:char *
ft_atoi	Shapes/ft_libft_printf_gnl/libft/ft_atoi.c	/^int	ft_atoi(const char *nptr)$/;"	f	typeref:typename:int
ft_bzero	Shapes/ft_libft_printf_gnl/libft/ft_bzero.c	/^void	ft_bzero(void *s, int n)$/;"	f	typeref:typename:void
ft_calloc	Shapes/ft_libft_printf_gnl/get_next_line/get_next_line_utils.c	/^void	*ft_calloc(size_t nmemb, size_t size)$/;"	f	typeref:typename:void *
ft_calloc	Shapes/ft_libft_printf_gnl/libft/ft_calloc.c	/^void	*ft_calloc(size_t nmemb, size_t size)$/;"	f	typeref:typename:void *
ft_isalnum	Shapes/ft_libft_printf_gnl/libft/ft_isalnum.c	/^int	ft_isalnum(int c)$/;"	f	typeref:typename:int
ft_isalpha	Shapes/ft_libft_printf_gnl/libft/ft_isalpha.c	/^int	ft_isalpha(int c)$/;"	f	typeref:typename:int
ft_isascii	Shapes/ft_libft_printf_gnl/libft/ft_isascii.c	/^int	ft_isascii(int c)$/;"	f	typeref:typename:int
ft_isdigit	Shapes/ft_libft_printf_gnl/libft/ft_isdigit.c	/^int	ft_isdigit(int c)$/;"	f	typeref:typename:int
ft_isprint	Shapes/ft_libft_printf_gnl/libft/ft_isprint.c	/^int	ft_isprint(int c)$/;"	f	typeref:typename:int
ft_itoa	Shapes/ft_libft_printf_gnl/libft/ft_itoa.c	/^char	*ft_itoa(int n)$/;"	f	typeref:typename:char *
ft_lstadd_back	Shapes/ft_libft_printf_gnl/libft/ft_lstadd_back.c	/^void	ft_lstadd_back(t_list **lst, t_list *new)$/;"	f	typeref:typename:void
ft_lstadd_front	Shapes/ft_libft_printf_gnl/libft/ft_lstadd_front.c	/^void	ft_lstadd_front(t_list **lst, t_list *new)$/;"	f	typeref:typename:void
ft_lstclear	Shapes/ft_libft_printf_gnl/libft/ft_lstclear.c	/^void	ft_lstclear(t_list **lst, void (*del)(void *))$/;"	f	typeref:typename:void
ft_lstdelone	Shapes/ft_libft_printf_gnl/libft/ft_lstdelone.c	/^void	ft_lstdelone(t_list *lst, void (*del)(void*))$/;"	f	typeref:typename:void
ft_lstiter	Shapes/ft_libft_printf_gnl/libft/ft_lstiter.c	/^void	ft_lstiter(t_list *lst, void (*f)(void *))$/;"	f	typeref:typename:void
ft_lstlast	Shapes/ft_libft_printf_gnl/libft/ft_lstlast.c	/^t_list	*ft_lstlast(t_list *lst)$/;"	f	typeref:typename:t_list *
ft_lstmap	Shapes/ft_libft_printf_gnl/libft/ft_lstmap.c	/^t_list	*ft_lstmap(t_list *lst, void *(*f)(void *), void (*del)(void *))$/;"	f	typeref:typename:t_list *
ft_lstnew	Shapes/ft_libft_printf_gnl/libft/ft_lstnew.c	/^t_list	*ft_lstnew(void *content)$/;"	f	typeref:typename:t_list *
ft_lstsize	Shapes/ft_libft_printf_gnl/libft/ft_lstsize.c	/^int	ft_lstsize(t_list *lst)$/;"	f	typeref:typename:int
ft_memchr	Shapes/ft_libft_printf_gnl/libft/ft_memchr.c	/^void	*ft_memchr(const void *s, int c, size_t n)$/;"	f	typeref:typename:void *
ft_memcmp	Shapes/ft_libft_printf_gnl/libft/ft_memcmp.c	/^int	ft_memcmp(const void *s1, const void *s2, size_t n)$/;"	f	typeref:typename:int
ft_memcpy	Shapes/ft_libft_printf_gnl/libft/ft_memcpy.c	/^void	*ft_memcpy(void *dst, const void *src, size_t n)$/;"	f	typeref:typename:void *
ft_memmove	Shapes/ft_libft_printf_gnl/libft/ft_memmove.c	/^void	*ft_memmove(void *dst, const void *src, size_t len)$/;"	f	typeref:typename:void *
ft_memset	Shapes/ft_libft_printf_gnl/libft/ft_memset.c	/^void	*ft_memset(void *b, int c, size_t len)$/;"	f	typeref:typename:void *
ft_printf	Shapes/ft_libft_printf_gnl/printfer.c	/^int	ft_printf(const char *str, ...)$/;"	f	typeref:typename:int
ft_putchar_fd	Shapes/ft_libft_printf_gnl/libft/ft_putchar_fd.c	/^void	ft_putchar_fd(char c, int fd)$/;"	f	typeref:typename:void
ft_putendl_fd	Shapes/ft_libft_printf_gnl/libft/ft_putendl_fd.c	/^void	ft_putendl_fd(char *s, int fd)$/;"	f	typeref:typename:void
ft_puthex_fd	Shapes/ft_libft_printf_gnl/optionctrl_supl.c	/^void	ft_puthex_fd(unsigned long ln, int fd, t_conv *cvut)$/;"	f	typeref:typename:void
ft_putnbr_fd	Shapes/ft_libft_printf_gnl/libft/ft_putnbr_fd.c	/^void	ft_putnbr_fd(int n, int fd)$/;"	f	typeref:typename:void
ft_putstr	microshell.c	/^int ft_putstr(char *str)$/;"	f	typeref:typename:int
ft_putstr_fd	Shapes/ft_libft_printf_gnl/get_next_line/gnltester.c	/^void	ft_putstr_fd(char *str, int fd)$/;"	f	typeref:typename:void
ft_putstr_fd	Shapes/ft_libft_printf_gnl/libft/ft_putstr_fd.c	/^void	ft_putstr_fd(char *s, int fd)$/;"	f	typeref:typename:void
ft_putuns_fd	Shapes/ft_libft_printf_gnl/optionctrl_supl.c	/^void	ft_putuns_fd(unsigned int ln, int fd, t_conv *cvut)$/;"	f	typeref:typename:void
ft_split	Shapes/ft_libft_printf_gnl/libft/ft_split.c	/^char	**ft_split(char const *s, char c)$/;"	f	typeref:typename:char **
ft_strchr	Shapes/ft_libft_printf_gnl/libft/ft_strchr.c	/^char	*ft_strchr(const char *s, int c)$/;"	f	typeref:typename:char *
ft_strdup	Shapes/ft_libft_printf_gnl/libft/ft_strdup.c	/^char	*ft_strdup(const char *s)$/;"	f	typeref:typename:char *
ft_striteri	Shapes/ft_libft_printf_gnl/libft/ft_striteri.c	/^void	ft_striteri(char *s, void (*f)(unsigned int, char*))$/;"	f	typeref:typename:void
ft_strjoin	Shapes/ft_libft_printf_gnl/get_next_line/get_next_line_utils_bonus.c	/^char	*ft_strjoin(const char *s1, const char *s2)$/;"	f	typeref:typename:char *
ft_strjoin	Shapes/ft_libft_printf_gnl/libft/ft_strjoin.c	/^char	*ft_strjoin(char const *s1, char const *s2)$/;"	f	typeref:typename:char *
ft_strjoin_gnl	Shapes/ft_libft_printf_gnl/get_next_line/get_next_line_utils.c	/^char	*ft_strjoin_gnl(char *s1, char *s2)$/;"	f	typeref:typename:char *
ft_strlcat	Shapes/ft_libft_printf_gnl/libft/ft_strlcat.c	/^size_t	ft_strlcat(char *dst, const char *src, size_t size)$/;"	f	typeref:typename:size_t
ft_strlcpy	Shapes/ft_libft_printf_gnl/libft/ft_strlcpy.c	/^size_t	ft_strlcpy(char *dst, const char *src, size_t size)$/;"	f	typeref:typename:size_t
ft_strlen	Shapes/ft_libft_printf_gnl/get_next_line/get_next_line_utils_bonus.c	/^size_t	ft_strlen(const char *s)$/;"	f	typeref:typename:size_t
ft_strlen	Shapes/ft_libft_printf_gnl/libft/ft_strlen.c	/^size_t	ft_strlen(const char *s)$/;"	f	typeref:typename:size_t
ft_strlen	microshell.c	/^size_t ft_strlen(char *str)$/;"	f	typeref:typename:size_t
ft_strlen_gnl	Shapes/ft_libft_printf_gnl/get_next_line/get_next_line_utils.c	/^size_t	ft_strlen_gnl(char *s)$/;"	f	typeref:typename:size_t
ft_strmapi	Shapes/ft_libft_printf_gnl/libft/ft_strmapi.c	/^char	*ft_strmapi(char const *s, char (*f)(unsigned int, char))$/;"	f	typeref:typename:char *
ft_strncmp	Shapes/ft_libft_printf_gnl/libft/ft_strncmp.c	/^int	ft_strncmp(const char *s1, const char *s2, size_t n)$/;"	f	typeref:typename:int
ft_strnstr	Shapes/ft_libft_printf_gnl/libft/ft_strnstr.c	/^char	*ft_strnstr(const char *big, const char *little, size_t len)$/;"	f	typeref:typename:char *
ft_strrchr	Shapes/ft_libft_printf_gnl/libft/ft_strrchr.c	/^char	*ft_strrchr(const char *s, int c)$/;"	f	typeref:typename:char *
ft_strtrim	Shapes/ft_libft_printf_gnl/libft/ft_strtrim.c	/^char	*ft_strtrim(char const *s1, char const *set)$/;"	f	typeref:typename:char *
ft_strtrim	ft_strtrim.c	/^char *ft_strtrim(char const *s1, char const *set)$/;"	f	typeref:typename:char *
ft_substr	Shapes/ft_libft_printf_gnl/libft/ft_substr.c	/^char	*ft_substr(char const *s, unsigned int start, size_t len)$/;"	f	typeref:typename:char *
ft_tolower	Shapes/ft_libft_printf_gnl/libft/ft_tolower.c	/^int	ft_tolower(int c)$/;"	f	typeref:typename:int
ft_toupper	Shapes/ft_libft_printf_gnl/libft/ft_toupper.c	/^int	ft_toupper(int c)$/;"	f	typeref:typename:int
ftrim	Shapes/ft_libft_printf_gnl/libft/ft_strtrim.c	/^int	ftrim(char const *s1, char const *set)$/;"	f	typeref:typename:int
get_next_line	Shapes/ft_libft_printf_gnl/get_next_line/get_next_line.c	/^char	*get_next_line(int fd)$/;"	f	typeref:typename:char *
get_next_line	Shapes/ft_libft_printf_gnl/get_next_line/get_next_line_bonus.c	/^char	*get_next_line(int fd)$/;"	f	typeref:typename:char *
getline	longest_inverse.c	/^int getline(char s[], int lim)$/;"	f	typeref:typename:int
getline	longextern.c	/^int getline(void)$/;"	f	typeref:typename:int
getlines	entab3.c	/^int getlines()$/;"	f	typeref:typename:int
gnl	Shapes/ft_libft_printf_gnl/Makefile	/^gnl:$/;"	t
hash	Shapes/ft_libft_printf_gnl/ft_libft_printf_gnl.h	/^	int	hash;$/;"	m	struct:sctone	typeref:typename:int
hexprintshrinker	Shapes/ft_libft_printf_gnl/print_toconv_supl.c	/^void	hexprintshrinker(t_toggler *flg, unsigned int toconv, t_conv *cvut)$/;"	f	typeref:typename:void
hexshrinker	Shapes/ft_libft_printf_gnl/print_toconv_supll.c	/^void	hexshrinker(unsigned int toconv, t_conv *cvut, t_toggler *flg)$/;"	f	typeref:typename:void
ifbufhasreturn	Shapes/ft_libft_printf_gnl/get_next_line/get_next_line.c	/^char	*ifbufhasreturn(t_strs *strings, char **statline, int i, int *red)$/;"	f	typeref:typename:char *
ifbufhasreturn	Shapes/ft_libft_printf_gnl/get_next_line/get_next_line_bonus.c	/^char	*ifbufhasreturn(t_strs *strings, char **statline, int i, int *red)$/;"	f	typeref:typename:char *
ifstatret	Shapes/ft_libft_printf_gnl/get_next_line/get_next_line.c	/^char	*ifstatret(t_strs *strings, char **statline, int i)$/;"	f	typeref:typename:char *
ifstatret	Shapes/ft_libft_printf_gnl/get_next_line/get_next_line_bonus.c	/^char	*ifstatret(t_strs *strings, char **statline, int i)$/;"	f	typeref:typename:char *
img	Shapes/shapes.h	/^	void	*img;$/;"	m	struct:s_data	typeref:typename:void *
implfing	Shapes/ft_libft_printf_gnl/libft/ft_split.c	/^void	*implfing(char const *s, char c, char **ptrptr, int *i)$/;"	f	typeref:typename:void *
in_comment	syntaxchecker.c	/^void in_comment(void)$/;"	f	typeref:typename:void
in_quote	syntaxchecker.c	/^void in_quote(int c)$/;"	f	typeref:typename:void
len	Shapes/ft_libft_printf_gnl/ft_libft_printf_gnl.h	/^	int		len;$/;"	m	struct:sct	typeref:typename:int
lengthhex	Shapes/ft_libft_printf_gnl/print_toconv_supl.c	/^int	lengthhex(unsigned int toconv, t_conv *cvut, t_toggler *flg)$/;"	f	typeref:typename:int
lengthint	Shapes/ft_libft_printf_gnl/print_toconv_supl.c	/^int	lengthint(int toconv, t_conv *cvut, t_toggler *flg)$/;"	f	typeref:typename:int
lengthprehex	Shapes/ft_libft_printf_gnl/print_toconv_supl.c	/^int	lengthprehex(unsigned int toconv, t_conv *cvut, t_toggler *flg)$/;"	f	typeref:typename:int
lengthpreint	Shapes/ft_libft_printf_gnl/print_toconv_supl.c	/^int	lengthpreint(int toconv, t_conv *cvut)$/;"	f	typeref:typename:int
libf	Shapes/ft_libft_printf_gnl/Makefile	/^libf:$/;"	t
libf_printf_gnl	Shapes/Makefile	/^libf_printf_gnl:$/;"	t
line	Shapes/ft_libft_printf_gnl/get_next_line/get_next_line.h	/^	char	*line;$/;"	m	struct:sctgnl	typeref:typename:char *
line	Shapes/ft_libft_printf_gnl/get_next_line/get_next_line_bonus.h	/^	char	*line;$/;"	m	struct:sct1	typeref:typename:char *
line	longextern.c	/^char line[MAXLINE], longest[MAXLINE];$/;"	v	typeref:typename:char[]
line_length	Shapes/shapes.h	/^	int	line_length;$/;"	m	struct:s_data	typeref:typename:int
longest	longextern.c	/^char line[MAXLINE], longest[MAXLINE];$/;"	v	typeref:typename:char[]
main	2_1_range_of_types.c	/^int main(void)$/;"	f	typeref:typename:int
main	2_1_range_of_types_simple.c	/^int main(void)$/;"	f	typeref:typename:int
main	Shapes/circle.c	/^int	main(void)$/;"	f	typeref:typename:int
main	Shapes/ft_libft_printf_gnl/get_next_line/gnltester.c	/^int	main(void)$/;"	f	typeref:typename:int
main	Shapes/gradients.c	/^int main(void)$/;"	f	typeref:typename:int
main	Shapes/square.c	/^int	main(void)$/;"	f	typeref:typename:int
main	copying.c	/^main()$/;"	f
main	countbackspc.c	/^main()$/;"	f
main	counting.c	/^main()$/;"	f
main	countingf.c	/^main()$/;"	f
main	countingw.c	/^main()$/;"	f
main	cplusplus.c++	/^main()$/;"	f
main	detab.c	/^void	main()$/;"	f	typeref:typename:void
main	entab3.c	/^main(){$/;"	f
main	fahragain.c	/^int main()$/;"	f	typeref:typename:int
main	fizzbuzz.c	/^int main(void)$/;"	f	typeref:typename:int
main	longest_inverse.c	/^int main()$/;"	f	typeref:typename:int
main	longextern.c	/^main()$/;"	f
main	microshell.c	/^int main(int ac, char **av, char **env)$/;"	f	typeref:typename:int
main	nl_tbs_wscount.c	/^main() $/;"	f
main	power.c	/^int main()$/;"	f	typeref:typename:int
main	randtext.c	/^main()$/;"	f
main	replaceinto1ws.c	/^main()$/;"	f
main	rudesyntaxcheck.c	/^int main() $/;"	f	typeref:typename:int
main	rudesyntaxcheck2.c	/^int main()$/;"	f	typeref:typename:int
main	setofages.c	/^main()$/;"	f
main	syntaxchecker.c	/^main()$/;"	f
main	test2.c	/^main() $/;"	f
main	wcount2.c	/^main()$/;"	f
mainwhile	Shapes/ft_libft_printf_gnl/get_next_line/get_next_line.c	/^char	*mainwhile(int fd, t_strs *strings, char **statline, int *red)$/;"	f	typeref:typename:char *
mainwhile	Shapes/ft_libft_printf_gnl/get_next_line/get_next_line_bonus.c	/^char	*mainwhile(int fd, t_strs *strings, char **statline, int *red)$/;"	f	typeref:typename:char *
max	longextern.c	/^int max;$/;"	v	typeref:typename:int
my_dblfloat	2_1_range_of_types.c	/^void my_dblfloat(void)$/;"	f	typeref:typename:void
my_float	2_1_range_of_types.c	/^void my_float(void)$/;"	f	typeref:typename:void
my_mlx_pixel_put	Shapes/shape_utils.c	/^void	my_mlx_pixel_put(t_data *img, int x, int y, int color)$/;"	f	typeref:typename:void
nbr_of_word	microshell.c	/^int nbr_of_word(char **argv)$/;"	f	typeref:typename:int
neg	Shapes/ft_libft_printf_gnl/ft_libft_printf_gnl.h	/^	int	neg;$/;"	m	struct:sctone	typeref:typename:int
next	Shapes/ft_libft_printf_gnl/libft/libft.h	/^	struct s_list	*next;$/;"	m	struct:s_list	typeref:struct:s_list *
no_dupl	Shapes/ft_libft_printf_gnl/printparser.c	/^int	no_dupl(char *retstr, char ch, int e, const char *str)$/;"	f	typeref:typename:int
numbertypes	Shapes/ft_libft_printf_gnl/printfer_supl.c	/^int	numbertypes(t_conv *cvut, long long toconv, int i)$/;"	f	typeref:typename:int
numlen	Shapes/ft_libft_printf_gnl/optionctrl_supl.c	/^int	numlen(unsigned long ln, t_conv *cvut)$/;"	f	typeref:typename:int
numlenneg	Shapes/ft_libft_printf_gnl/optionctrl.c	/^int	numlenneg(long long ln, t_conv *cvut)$/;"	f	typeref:typename:int
paren	syntaxchecker.c	/^int brace, brack, paren;$/;"	v	typeref:typename:int
parenbrack	rudesyntaxcheck2.c	/^int parenbrack(int i, char sm[], int y, char st[])$/;"	f	typeref:typename:int
parenbrackets	rudesyntaxcheck.c	/^int parenbrackets(int i, char sm[], int y)$/;"	f	typeref:typename:int
parselong	Shapes/ft_libft_printf_gnl/libft/ft_itoa.c	/^int	parselong(long ln, int *neg)$/;"	f	typeref:typename:int
placeva	Shapes/ft_libft_printf_gnl/printfer.c	/^int	placeva(int *ret, t_conv *cvut, int i, va_list perc)$/;"	f	typeref:typename:int
plus	Shapes/ft_libft_printf_gnl/ft_libft_printf_gnl.h	/^	int	plus;$/;"	m	struct:sctone	typeref:typename:int
point	Shapes/ft_libft_printf_gnl/ft_libft_printf_gnl.h	/^	int	point;$/;"	m	struct:sctone	typeref:typename:int
power	power.c	/^int power(int base, int n) $/;"	f	typeref:typename:int
precis	Shapes/ft_libft_printf_gnl/ft_libft_printf_gnl.h	/^	int		precis;$/;"	m	struct:sct	typeref:typename:int
precision_counter	Shapes/ft_libft_printf_gnl/printparser.c	/^int	precision_counter(const char *str, int i)$/;"	f	typeref:typename:int
printargcha	Shapes/ft_libft_printf_gnl/print_toconv_supll.c	/^int	printargcha(int toconv, t_conv *cvut)$/;"	f	typeref:typename:int
printarghex	Shapes/ft_libft_printf_gnl/print_toconv_supll.c	/^int	printarghex(unsigned int toconv, t_conv *cvut)$/;"	f	typeref:typename:int
printargptr	Shapes/ft_libft_printf_gnl/print_toconv_supll.c	/^int	printargptr(unsigned long toconv, t_conv *cvut)$/;"	f	typeref:typename:int
proxylengthcnt	Shapes/ft_libft_printf_gnl/printparser_supl.c	/^int	proxylengthcnt(const char *str, int i)$/;"	f	typeref:typename:int
prx_len	Shapes/ft_libft_printf_gnl/ft_libft_printf_gnl.h	/^	int		prx_len;$/;"	m	struct:sct	typeref:typename:int
ptrtypes	Shapes/ft_libft_printf_gnl/printfer.c	/^int	ptrtypes(t_conv *cvut, void *toconv, int i)$/;"	f	typeref:typename:int
quotesdoubl	rudesyntaxcheck.c	/^int quotesdoubl(int i, char sm[], int y)$/;"	f	typeref:typename:int
r	randtext.c	/^int r = rand(); $/;"	v	typeref:typename:int
re	Shapes/Makefile	/^re: fclean$/;"	t
re	Shapes/ft_libft_printf_gnl/Makefile	/^re: fclean$/;"	t
re	Shapes/ft_libft_printf_gnl/get_next_line/Makefile	/^re: fclean$/;"	t
re	Shapes/ft_libft_printf_gnl/libft/Makefile	/^re: fclean all$/;"	t
readforterm	Shapes/ft_libft_printf_gnl/get_next_line/get_next_line_utils.c	/^int	readforterm(char *buf, int toggle)$/;"	f	typeref:typename:int
readforterm	Shapes/ft_libft_printf_gnl/get_next_line/get_next_line_utils_bonus.c	/^int	readforterm(char *buf, int toggle)$/;"	f	typeref:typename:int
replace_nline	Shapes/ft_libft_printf_gnl/get_next_line/gnltester.c	/^char	*replace_nline(int fd, char *nline)$/;"	f	typeref:typename:char *
s_data	Shapes/shapes.h	/^typedef struct s_data {$/;"	s
s_list	Shapes/ft_libft_printf_gnl/libft/libft.h	/^typedef struct s_list$/;"	s
sct	Shapes/ft_libft_printf_gnl/ft_libft_printf_gnl.h	/^typedef struct sct {$/;"	s
sct1	Shapes/ft_libft_printf_gnl/get_next_line/get_next_line_bonus.h	/^typedef struct sct1 {$/;"	s
sctgnl	Shapes/ft_libft_printf_gnl/get_next_line/get_next_line.h	/^typedef struct sctgnl {$/;"	s
sctone	Shapes/ft_libft_printf_gnl/ft_libft_printf_gnl.h	/^typedef struct sctone {$/;"	s
search	syntaxchecker.c	/^void search(int c)$/;"	f	typeref:typename:void
set_flags	Shapes/ft_libft_printf_gnl/optionctrl.c	/^void	*set_flags(t_toggler *flg)$/;"	f	typeref:typename:void *
signed_char	2_1_range_of_types.c	/^void signed_char(void)$/;"	f	typeref:typename:void
signed_short	2_1_range_of_types.c	/^void signed_short(void)$/;"	f	typeref:typename:void
simple_cvutlen	Shapes/ft_libft_printf_gnl/print_toconv.c	/^void	simple_cvutlen(t_toggler *flg, t_conv *cvut, int toconv)$/;"	f	typeref:typename:void
sm	rudesyntaxcheck2.c	/^char sm[MAX];$/;"	v	typeref:typename:char[]
space	Shapes/ft_libft_printf_gnl/ft_libft_printf_gnl.h	/^	int	space;$/;"	m	struct:sctone	typeref:typename:int
spcplunopoint	Shapes/ft_libft_printf_gnl/print_toconv.c	/^void	spcplunopoint(t_toggler *flg, int toconv, t_conv *cvut)$/;"	f	typeref:typename:void
stat_after_read	Shapes/ft_libft_printf_gnl/get_next_line/get_next_line.c	/^char	*stat_after_read(char **statline, t_strs *strings, int red, int i)$/;"	f	typeref:typename:char *
stat_after_read	Shapes/ft_libft_printf_gnl/get_next_line/get_next_line_bonus.c	/^char	*stat_after_read(char **statline, t_strs *strings, int red, int i)$/;"	f	typeref:typename:char *
strcvutneg	Shapes/ft_libft_printf_gnl/print_toconv_suplll.c	/^void	strcvutneg(t_toggler *flg, t_conv *cvut, const char *toconv)$/;"	f	typeref:typename:void
strshrinker	Shapes/ft_libft_printf_gnl/print_toconv_suplll.c	/^void	strshrinker(t_toggler *flg, t_conv *cvut, const char *toconv)$/;"	f	typeref:typename:void
t_conv	Shapes/ft_libft_printf_gnl/ft_libft_printf_gnl.h	/^}	t_conv;$/;"	t	typeref:struct:sct
t_data	Shapes/shapes.h	/^}			t_data;$/;"	t	typeref:struct:s_data
t_list	Shapes/ft_libft_printf_gnl/libft/libft.h	/^}	t_list;$/;"	t	typeref:struct:s_list
t_strs	Shapes/ft_libft_printf_gnl/get_next_line/get_next_line.h	/^}	t_strs;$/;"	t	typeref:struct:sctgnl
t_strs	Shapes/ft_libft_printf_gnl/get_next_line/get_next_line_bonus.h	/^}	t_strs;$/;"	t	typeref:struct:sct1
t_toggler	Shapes/ft_libft_printf_gnl/ft_libft_printf_gnl.h	/^}	t_toggler;	$/;"	t	typeref:struct:sctone
testperc	Shapes/ft_libft_printf_gnl/printfer.c	/^int	testperc(t_conv *cvut)$/;"	f	typeref:typename:int
testprintargint	Shapes/ft_libft_printf_gnl/print_toconv_supllll.c	/^int	testprintargint(int toconv, t_conv *cvut)$/;"	f	typeref:typename:int
testprintargstr	Shapes/ft_libft_printf_gnl/print_toconv_supll.c	/^int	testprintargstr(const char *toconv, t_conv *cvut)$/;"	f	typeref:typename:int
testprintarguns	Shapes/ft_libft_printf_gnl/print_toconv.c	/^int	testprintarguns(unsigned int toconv, t_conv *cvut)$/;"	f	typeref:typename:int
trans	Shapes/ft_libft_printf_gnl/libft/ft_itoa.c	/^char	*trans(int i, long buf, int *neg)$/;"	f	typeref:typename:char *
trimatoi	Shapes/ft_libft_printf_gnl/libft/ft_atoi.c	/^int	trimatoi(const char *nptr, int *neg)$/;"	f	typeref:typename:int
type	Shapes/ft_libft_printf_gnl/ft_libft_printf_gnl.h	/^	char	type;$/;"	m	struct:sct	typeref:typename:char
type_reader	Shapes/ft_libft_printf_gnl/printparser.c	/^char	type_reader(const char *str, int i)$/;"	f	typeref:typename:char
unsigned_char	2_1_range_of_types.c	/^void unsigned_char(void)$/;"	f	typeref:typename:void
unsigned_short	2_1_range_of_types.c	/^void unsigned_short(void)$/;"	f	typeref:typename:void
wid	Shapes/ft_libft_printf_gnl/ft_libft_printf_gnl.h	/^	int		wid;$/;"	m	struct:sct	typeref:typename:int
width_counter	Shapes/ft_libft_printf_gnl/printparser.c	/^int	width_counter(const char *str, int i)$/;"	f	typeref:typename:int
zero	Shapes/ft_libft_printf_gnl/ft_libft_printf_gnl.h	/^	int	zero;$/;"	m	struct:sctone	typeref:typename:int
